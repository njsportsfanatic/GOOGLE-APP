package prog8;

import java.awt.Color;
import java.util.Random;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class Puzzle extends javax.swing.JFrame {

    private int blankRow = 3;
    private int blankCol = 3;
    private DefaultTableModel model = new DefaultTableModel(4, 4); 
    private Random rand = new Random();

    public Puzzle() {
        initComponents();
        jTable1.setShowGrid(true);
        jTable1.setGridColor(Color.BLACK);
        reset();
    }
    
    private void reset(){
        blankRow = 3;
        blankCol = 3;
        String gridNum = "1";
        for(int i=0; i<4; i++){
            for(int j=0; j<4; j++){
                model.setValueAt(gridNum, i, j);
                gridNum = (Integer.parseInt(gridNum) + 1) + "";
                model.setValueAt("", 3, 3);
            }
        }
        jTable1.setBackground(Color.WHITE);
        jTable1.setModel(model);
    }
    
    private void checkForSolved(){
        String gridNum = "1";
        for(int i=0; i<4; i++){
            for(int j=0; j<4; j++){
                if(gridNum.equals(model.getValueAt(i, j))){   
                    gridNum = (Integer.parseInt(gridNum) + 1) + "";
                    if(i==3 && j==2){
                        jTable1.setBackground(Color.YELLOW);
                    }
                }
                else{
                    return;
                } 
            }
        }
        jTable1.setBackground(Color.YELLOW);
    }
    
    private boolean shift(int row, int col){
        if(row == blankRow+1 && col == blankCol || row == blankRow-1 && col == blankCol || row == blankRow && col == blankCol+1 || row == blankRow && col == blankCol-1){
            model.setValueAt(model.getValueAt(row, col), blankRow, blankCol);
            model.setValueAt("", row, col);
            blankRow = row;
            blankCol = col;
            return true;
        }
        else{
            return false;
        }
    }
    
    private void scramble(){
        for(int i=0; i<10;){
            int r = rand.nextInt(15);
            int row = r/4;
            int col = r%4;
            if(shift(row, col)){
                shift(row, col);
                i++;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        resetBtn = new javax.swing.JButton();
        scrambleBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusTraversalKeysEnabled(false);
        setName(""); // NOI18N

        resetBtn.setText("Reset");
        resetBtn.setFocusTraversalKeysEnabled(false);
        resetBtn.setName(""); // NOI18N
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        scrambleBtn.setText("Scramble");
        scrambleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scrambleBtnActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(128, 128, 128));
        jTable1.setRowHeight(61);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setSelectionBackground(java.awt.SystemColor.inactiveCaptionText);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrambleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(resetBtn)
                        .addGap(32, 32, 32)
                        .addComponent(scrambleBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scrambleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scrambleBtnActionPerformed
        jTable1.setBackground(Color.WHITE);
        scramble();
    }//GEN-LAST:event_scrambleBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        reset();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        JTable target = (JTable) evt.getSource();
        int row = target.getSelectedRow();
        int col = target.getSelectedColumn();
        shift(row, col);
        checkForSolved();
    }//GEN-LAST:event_jTable1MousePressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Puzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Puzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Puzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Puzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Puzzle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton scrambleBtn;
    // End of variables declaration//GEN-END:variables
}
